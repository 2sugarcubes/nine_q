use crate::word_tree::{self, WordTree};

use log::info;

pub struct NineP {
    chars: String,
    word_tree: WordTree,
}

impl NineP {
    pub fn new(board: String, word_tree: WordTree) -> Self {
        NineP {
            chars: board,
            word_tree,
        }
    }

    pub fn solve(&self) -> Vec<String> {
        self.word_tree.solve(&self.chars)
    }
}

#[cfg(test)]
mod test {
    use crate::{init_logger, load_9p_like_words};

    use super::*;
    use rayon::prelude::*;

    #[test]
    fn level_one() {
        init_logger();
        let board = NineP {
            chars: "eimoprss".to_string(),
            word_tree: load_9p_like_words("words_eng.txt").unwrap(),
        };

        let mut words = board.solve();

        words.par_sort();
        assert_eq!(
            words,
            [
                "emir".to_string(),
                "emirs".to_string(),
                "epos".to_string(),
                "epris".to_string(),
                "epsom".to_string(),
                "eris".to_string(),
                "eros".to_string(),
                "imer".to_string(),
                "imper".to_string(),
                "impers".to_string(),
                "impose".to_string(),
                "imposer".to_string(),
                "imposers".to_string(),
                "imposes".to_string(),
                "impress".to_string(),
                "imps".to_string(),
                "ipse".to_string(),
                "ipso".to_string(),
                "ireos".to_string(),
                "ires".to_string(),
                "irpe".to_string(),
                "isms".to_string(),
                "isomer".to_string(),
                "isomers".to_string(),
                "meio".to_string(),
                "mero".to_string(),
                "merop".to_string(),
                "merops".to_string(),
                "meros".to_string(),
                "meso".to_string(),
                "mess".to_string(),
                "messor".to_string(),
                "mioses".to_string(),
                "mips".to_string(),
                "mire".to_string(),
                "mires".to_string(),
                "miro".to_string(),
                "mirs".to_string(),
                "mise".to_string(),
                "miser".to_string(),
                "misers".to_string(),
                "mises".to_string(),
                "miso".to_string(),
                "misos".to_string(),
                "miss".to_string(),
                "moier".to_string(),
                "moir".to_string(),
                "moire".to_string(),
                "moires".to_string(),
                "moise".to_string(),
                "mope".to_string(),
                "moper".to_string(),
                "mopers".to_string(),
                "mopes".to_string(),
                "mopier".to_string(),
                "mops".to_string(),
                "more".to_string(),
                "mores".to_string(),
                "mors".to_string(),
                "morse".to_string(),
                "mose".to_string(),
                "moses".to_string(),
                "moss".to_string(),
                "mosser".to_string(),
                "mossi".to_string(),
                "mossie".to_string(),
                "mossier".to_string(),
                "oime".to_string(),
                "omer".to_string(),
                "omers".to_string(),
                "opes".to_string(),
                "ores".to_string(),
                "oses".to_string(),
                "osier".to_string(),
                "osiers".to_string(),
                "osperm".to_string(),
                "osse".to_string(),
                "peri".to_string(),
                "peris".to_string(),
                "perm".to_string(),
                "permiss".to_string(),
                "perms".to_string(),
                "perosis".to_string(),
                "pers".to_string(),
                "persio".to_string(),
                "persis".to_string(),
                "persism".to_string(),
                "peso".to_string(),
                "pesos".to_string(),
                "pess".to_string(),
                "pier".to_string(),
                "piers".to_string(),
                "pies".to_string(),
                "piro".to_string(),
                "pise".to_string(),
                "piso".to_string(),
                "piss".to_string(),
                "poem".to_string(),
                "poems".to_string(),
                "poesis".to_string(),
                "poire".to_string(),
                "pois".to_string(),
                "poise".to_string(),
                "poiser".to_string(),
                "poisers".to_string(),
                "poises".to_string(),
                "pome".to_string(),
                "pomes".to_string(),
                "pore".to_string(),
                "pores".to_string(),
                "porism".to_string(),
                "porisms".to_string(),
                "pose".to_string(),
                "poser".to_string(),
                "posers".to_string(),
                "poses".to_string(),
                "posies".to_string(),
                "poss".to_string(),
                "posse".to_string(),
                "possie".to_string(),
                "prem".to_string(),
                "premio".to_string(),
                "premiss".to_string(),
                "pres".to_string(),
                "press".to_string(),
                "prie".to_string(),
                "pries".to_string(),
                "prim".to_string(),
                "prime".to_string(),
                "primes".to_string(),
                "primo".to_string(),
                "primos".to_string(),
                "prims".to_string(),
                "prio".to_string(),
                "prise".to_string(),
                "prises".to_string(),
                "prism".to_string(),
                "prisms".to_string(),
                "priss".to_string(),
                "proem".to_string(),
                "proems".to_string(),
                "prom".to_string(),
                "promise".to_string(),
                "promises".to_string(),
                "promiss".to_string(),
                "proms".to_string(),
                "pros".to_string(),
                "prose".to_string(),
                "proses".to_string(),
                "pross".to_string(),
                "psis".to_string(),
                "reim".to_string(),
                "reis".to_string(),
                "remi".to_string(),
                "remiss".to_string(),
                "remop".to_string(),
                "rems".to_string(),
                "reps".to_string(),
                "resp".to_string(),
                "riem".to_string(),
                "ries".to_string(),
                "rime".to_string(),
                "rimes".to_string(),
                "rimose".to_string(),
                "rims".to_string(),
                "ripe".to_string(),
                "ripes".to_string(),
                "rips".to_string(),
                "rise".to_string(),
                "rises".to_string(),
                "risp".to_string(),
                "riss".to_string(),
                "rissom".to_string(),
                "roes".to_string(),
                "rome".to_string(),
                "romp".to_string(),
                "romps".to_string(),
                "roms".to_string(),
                "rope".to_string(),
                "ropes".to_string(),
                "rose".to_string(),
                "roses".to_string(),
                "ross".to_string(),
                "seis".to_string(),
                "seism".to_string(),
                "seisor".to_string(),
                "semi".to_string(),
                "semipro".to_string(),
                "semipros".to_string(),
                "semis".to_string(),
                "semois".to_string(),
                "seor".to_string(),
                "seps".to_string(),
                "seri".to_string(),
                "serio".to_string(),
                "sermo".to_string(),
                "sero".to_string(),
                "sers".to_string(),
                "sier".to_string(),
                "sime".to_string(),
                "simp".to_string(),
                "simper".to_string(),
                "simpers".to_string(),
                "simps".to_string(),
                "sims".to_string(),
                "sipe".to_string(),
                "siper".to_string(),
                "sipers".to_string(),
                "sipes".to_string(),
                "sips".to_string(),
                "sire".to_string(),
                "sires".to_string(),
                "sirop".to_string(),
                "siros".to_string(),
                "sirs".to_string(),
                "sise".to_string(),
                "smore".to_string(),
                "soir".to_string(),
                "some".to_string(),
                "somers".to_string(),
                "sope".to_string(),
                "sops".to_string(),
                "sore".to_string(),
                "sores".to_string(),
                "sori".to_string(),
                "sosie".to_string(),
                "speir".to_string(),
                "speirs".to_string(),
                "speos".to_string(),
                "sperm".to_string(),
                "sperms".to_string(),
                "spier".to_string(),
                "spiers".to_string(),
                "spies".to_string(),
                "spire".to_string(),
                "spirem".to_string(),
                "spirems".to_string(),
                "spires".to_string(),
                "spiro".to_string(),
                "spise".to_string(),
                "spor".to_string(),
                "spore".to_string(),
                "spores".to_string(),
                "sprose".to_string(),
                "sris".to_string(),
            ]
        );
    }
}
